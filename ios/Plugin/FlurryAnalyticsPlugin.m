#import <Foundation/Foundation.h>
#import <Capacitor/Capacitor.h>

// Define the plugin using the CAP_PLUGIN Macro, and
// each method the plugin supports using the CAP_PLUGIN_METHOD macro.
CAP_PLUGIN(FlurryAnalyticsPlugin, "FlurryAnalytics",
    CAP_PLUGIN_METHOD(initialize, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logContentRated, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logContentViewed, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logContentSaved, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logProductCustomized, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logSubscriptionStarted, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logSubscriptionEnded, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logGroupJoined, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logGroupLeft, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logLogin, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logLogout, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logUserRegistered, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logSearchResultViewed, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logKeywordSearched, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logLocationSearched, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logInvite, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logShare, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logLike, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logComment, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logMediaCaptured, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logMediaStarted, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logMediaStopped, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logMediaPaused, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logCustomEvent, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(endTimedEvent, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(setUserId, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(setAge, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(setGender, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logError, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logAdClick, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logAdImpression, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logAdRewarded, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logAdSkipped, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logCreditsSpent, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logCreditsPurchased, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logCreditsEarned, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logAchievementUnlocked, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logLevelCompleted, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logLevelFailed, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logLevelUp, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logLevelStarted, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logLevelSkip, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logScorePosted, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logAppActivated, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logApplicationSubmitted, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logAddItemToCart, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logAddItemToWishList, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logCompletedCheckout, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logPaymentInfoAdded, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logItemViewed, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logItemListViewed, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logPurchased, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logPurchaseRefunded, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logRemoveItemFromCart, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logCheckoutInitiated, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logFundsDonated, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logUserScheduled, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logOfferPresented, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logTutorialStarted, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logTutorialCompleted, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logTutorialStepCompleted, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logTutorialSkipped, CAPPluginReturnPromise);
    CAP_PLUGIN_METHOD(logPrivacyPromptDisplayed, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logPrivacyOptIn, CAPPluginReturnNone);
    CAP_PLUGIN_METHOD(logPrivacyOptOut, CAPPluginReturnNone);
)
